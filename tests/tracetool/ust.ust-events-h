/* This file is autogenerated by tracetool, do not edit. */
/* SPDX-License-Identifier: GPL-2.0-or-later */

#undef TRACEPOINT_PROVIDER
#define TRACEPOINT_PROVIDER qemu

#undef TRACEPOINT_INCLUDE
#define TRACEPOINT_INCLUDE "./trace-ust.h"

#if !defined (TRACE_TESTSUITE_GENERATED_UST_H) || \
     defined(TRACEPOINT_HEADER_MULTI_READ)
#define TRACE_TESTSUITE_GENERATED_UST_H

#include <lttng/tracepoint.h>

/*
 * LTTng ust 2.0 does not allow you to use TP_ARGS(void) for tracepoints
 * requiring no arguments. We define these macros introduced in more recent * versions of LTTng ust as a workaround
 */
#ifndef _TP_EXPROTO1
#define _TP_EXPROTO1(a)               void
#endif
#ifndef _TP_EXDATA_PROTO1
#define _TP_EXDATA_PROTO1(a)          void *__tp_data
#endif
#ifndef _TP_EXDATA_VAR1
#define _TP_EXDATA_VAR1(a)            __tp_data
#endif
#ifndef _TP_EXVAR1
#define _TP_EXVAR1(a)
#endif

TRACEPOINT_EVENT(
   qemu,
   test_blah,
   TP_ARGS(void *, context, const char *, filename),
   TP_FIELDS(
       ctf_integer_hex(void *, context, context)
       ctf_string(filename, filename)
   )
)

TRACEPOINT_EVENT(
   qemu,
   test_wibble,
   TP_ARGS(void *, context, int, value),
   TP_FIELDS(
       ctf_integer_hex(void *, context, context)
       ctf_integer(int, value, value)
   )
)

#endif /* TRACE_TESTSUITE_GENERATED_UST_H */

/* This part must be outside ifdef protection */
#include <lttng/tracepoint-event.h>
