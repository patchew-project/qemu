"Instruction","Opcode","Valid 64-bit","Valid 32-bit","Valid 16-bit","Feature Flags","Operand 1","Operand 2","Operand 3","Operand 4","Tuple Type","Description"
"ANDN rw, rw, rw/mw","VEX.LZ.0F38.W0 F2 /r","Valid","Valid","Invalid","BMI1","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Bitwise AND of inverted r with r/m, store result in r."
"ANDN rw, rw, rw/mw","VEX.LZ.0F38.W1 F2 /r","Valid","Invalid","Invalid","BMI1","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Bitwise AND of inverted r with r/m, store result in r."
"BEXTR rw, rw/mw, rw","VEX.LZ.0F38.W0 F7 /r","Valid","Valid","Invalid","BMI1","ModRM:reg (w)","ModRM:r/m (r)","VEX.vvvv (r)","","","Contiguous bitwise extract from r/m using r as control; store result in r."
"BEXTR rw, rw/mw, rw","VEX.LZ.0F38.W1 F7 /r","Valid","Invalid","Invalid","BMI1","ModRM:reg (w)","ModRM:r/m (r)","VEX.vvvv (r)","","","Contiguous bitwise extract from r/m using r as control; store result in r."
"BLSI rw, rw/mw","VEX.LZ.0F38.W0 F3 /3","Valid","Valid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Extract lowest set bit from r/m and set that bit in r."
"BLSI rw, rw/mw","VEX.LZ.0F38.W1 F3 /3","Valid","Invalid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Extract lowest set bit from r/m, and set that bit in r."
"BLSMSK rw, rw/mw","VEX.LZ.0F38.W0 F3 /2","Valid","Valid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Set all lower bits in r to 1 starting from bit 0 to lowest set bit in r/m."
"BLSMSK rw, rw/mw","VEX.LZ.0F38.W1 F3 /2","Valid","Invalid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Set all lower bits in r to 1 starting from bit 0 to lowest set bit in r/m."
"BLSR rw, rw/mw","VEX.LZ.0F38.W0 F3 /1","Valid","Valid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Reset lowest set bit of r/m, keep all other bits of r/m and write result to r."
"BLSR rw, rw/mw","VEX.LZ.0F38.W1 F3 /1","Valid","Invalid","Invalid","BMI1","VEX.vvvv (w)","ModRM:r/m (r)","","","","Reset lowest set bit of r/m, keep all other bits of r/m and write result to r."
"TZCNT rw, rw/mw","LEX.F3.0F.W0 BC /r","Valid","Valid","Invalid","BMI1","ModRM:reg (w)","ModRM:r/m (r)","","","","Count the number of trailing zero bits in r/m, return result in r."
"TZCNT rw, rw/mw","LEX.F3.0F.W1 BC /r","Valid","Invalid","Invalid","BMI1","ModRM:reg (w)","ModRM:r/m (r)","","","","Count the number of trailing zero bits in r/m, return result in r."
