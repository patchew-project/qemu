"Instruction","Opcode","Valid 64-bit","Valid 32-bit","Valid 16-bit","Feature Flags","Operand 1","Operand 2","Operand 3","Operand 4","Tuple Type","Description"
"VPDPBSSD xmm,xmm,xmm/m128","VEX.128.f2.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in xmm3/m128 with corresponding signed bytes of xmm2, summing those products and adding them to the doubleword result in xmm1."
"VPDPBSSD ymm,ymm,ymm/m256","VEX.256.f2.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in ymm3/m256 with corresponding signed bytes of ymm2, summing those products and adding them to the doubleword result in ymm1."
"VPDPBSSDS xmm,xmm,xmm/m128","VEX.128.f2.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in xmm3/m128 with corresponding signed bytes of xmm2, summing those products and adding them to the doubleword result, with signed saturation in xmm1."
"VPDPBSSDS ymm,ymm,ymm/m256","VEX.256.f2.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in ymm3/m256 with corresponding signed bytes of ymm2, summing those products and adding them to the doubleword result, with signed saturation in ymm1."
"VPDPBSUD xmm,xmm,xmm/m128","VEX.128.f3.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in xmm3/m128 with corresponding unsigned bytes of xmm2, summing those products and adding them to doubleword result in xmm1."
"VPDPBSUD ymm,ymm,ymm/m256","VEX.256.f3.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in ymm3/m256 with corresponding unsigned bytes of ymm2, summing those products and adding them to doubleword result in ymm1."
"VPDPBSUDS xmm,xmm,xmm/m128","VEX.128.f3.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in xmm3/m128 with corresponding unsigned bytes of xmm2, summing those products and adding them to doubleword result, with signed saturation in xmm1."
"VPDPBSUDS ymm,ymm,ymm/m256","VEX.256.f3.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of signed bytes in ymm3/m256 with corresponding unsigned bytes of ymm2, summing those products and adding them to doubleword result, with signed saturation in ymm1."
"VPDPBUUD xmm,xmm,xmm/m128","VEX.128.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of unsigned bytes in xmm3/m128 with corresponding unsigned bytes of xmm2, summing those products and adding them to doubleword result in xmm1."
"VPDPBUUD ymm,ymm,ymm/m256","VEX.256.0F38.W0 50 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of unsigned bytes in ymm3/m256 with corresponding unsigned bytes of ymm2, summing those products and adding them to doubleword result in ymm1."
"VPDPBUUDS xmm,xmm,xmm/m128","VEX.128.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of unsigned bytes in xmm3/m128 with corresponding unsigned bytes of xmm2, summing those products and adding them to the doubleword result, with unsigned saturation in xmm1."
"VPDPBUUDS ymm,ymm,ymm/m256","VEX.256.0F38.W0 51 /r","Valid","Valid","Invalid","AVXVNNIINT8","ModRM:reg (r, w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Multiply groups of 4 pairs of unsigned bytes in ymm3/m256 with corresponding unsigned bytes of ymm2, summing those products and adding them to the doubleword result, with unsigned saturation in ymm1."
