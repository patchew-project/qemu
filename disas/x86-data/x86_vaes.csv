"Instruction","Opcode","Valid 64-bit","Valid 32-bit","Valid 16-bit","Feature Flags","Operand 1","Operand 2","Operand 3","Operand 4","Tuple Type","Description"
"VAESDEC xmm1, xmm2, xmm3/m128","EVEX.128.66.0F38.WIG DE /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES decryption flow, using the Equivalent Inverse Cipher, using one 128-bit data (state) from xmm2 with one 128-bit round key from xmm3/m128; store the result in xmm1."
"VAESDEC ymm1, ymm2, ymm3/m256","VEX.256.66.0F38.WIG DE /r","Valid","Valid","Invalid","VAES","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Perform one round of an AES decryption flow, using the Equivalent Inverse Cipher, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESDEC ymm1, ymm2, ymm3/m256","EVEX.256.66.0F38.WIG DE /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES decryption flow, using the Equivalent Inverse Cipher, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESDEC zmm1, zmm2, zmm3/m512","EVEX.512.66.0F38.WIG DE /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES decryption flow, using the Equivalent Inverse Cipher, using four 128-bit data (state) from zmm2 with four 128-bit round keys from zmm3/m512; store the result in zmm1."
"VAESDECLAST xmm1, xmm2, xmm3/m128","EVEX.128.66.0F38.WIG DF /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES decryption flow, using the Equivalent Inverse Cipher, using one 128-bit data (state) from xmm2 with one 128-bit round key from xmm3/m128; store the result in xmm1."
"VAESDECLAST ymm1, ymm2, ymm3/m256","VEX.256.66.0F38.WIG DF /r","Valid","Valid","Invalid","VAES","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Perform the last round of an AES decryption flow, using the Equivalent Inverse Cipher, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESDECLAST ymm1, ymm2, ymm3/m256","EVEX.256.66.0F38.WIG DF /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES decryption flow, using the Equivalent Inverse Cipher, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESDECLAST zmm1, zmm2, zmm3/m512","EVEX.512.66.0F38.WIG DF /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES decryption flow, using the Equivalent Inverse Cipher, using four128-bit data (state) from zmm2 with four 128-bit round keys from zmm3/m512; store the result in zmm1."
"VAESENC xmm1, xmm2, xmm3/m128","EVEX.128.66.0F38.WIG DC /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES encryption flow, using one 128-bit data (state) from xmm2 with one 128-bit round key from the xmm3/m128; store the result in xmm1."
"VAESENC ymm1, ymm2, ymm3/m256","VEX.256.66.0F38.WIG DC /r","Valid","Valid","Invalid","VAES","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Perform one round of an AES encryption flow, using two 128-bit data (state) from ymm2 with two 128-bit round keys from the ymm3/m256; store the result in ymm1."
"VAESENC ymm1, ymm2, ymm3/m256","EVEX.256.66.0F38.WIG DC /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES encryption flow, using two 128-bit data (state) from ymm2 with two 128-bit round keys from the ymm3/m256; store the result in ymm1."
"VAESENC zmm1, zmm2, zmm3/m512","EVEX.512.66.0F38.WIG DC /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform one round of an AES encryption flow, using four 128-bit data (state) from zmm2 with four 128-bit round keys from the zmm3/m512; store the result in zmm1."
"VAESENCLAST xmm1, xmm2, xmm3/m128","EVEX.128.66.0F38.WIG DD /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES encryption flow, using one 128-bit data (state) from xmm2 with one 128-bit round key from xmm3/m128; store the result in xmm1."
"VAESENCLAST ymm1, ymm2, ymm3/m256","VEX.256.66.0F38.WIG DD /r","Valid","Valid","Invalid","VAES","ModRM:reg (w)","VEX.vvvv (r)","ModRM:r/m (r)","","","Perform the last round of an AES encryption flow, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESENCLAST ymm1, ymm2, ymm3/m256","EVEX.256.66.0F38.WIG DD /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES encryption flow, using two 128-bit data (state) from ymm2 with two 128-bit round keys from ymm3/m256; store the result in ymm1."
"VAESENCLAST zmm1, zmm2, zmm3/m512","EVEX.512.66.0F38.WIG DD /r","Valid","Valid","Invalid","VAES AVX512VL","ModRM:reg (w)","EVEX.vvvv (r)","ModRM:r/m (r)","","Full Mem","Perform the last round of an AES encryption flow, using four 128-bit data (state) from zmm2 with four 128-bit round keys from zmm3/m512; store the result in zmm1."
