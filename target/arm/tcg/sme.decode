# AArch64 SME instruction descriptions
#
#  Copyright (c) 2022 Linaro, Ltd
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, see <http://www.gnu.org/licenses/>.

#
# This file is processed by scripts/decodetree.py
#

### SME Misc

ZERO            11000000 00 001 00000000000 imm:8
ZERO_zt0        11000000 01 001 00000000000 00000001

### SME Move into/from Array

%mova_rs        13:2 !function=plus_12
%mova_rv        13:2 !function=plus_8
&mova_a         rv zr off
&mova_p         esz rs pg zr za off v:bool
&mova_t         esz rs zr za off v:bool

MOVA_tz         11000000 00 00000 0 v:1 .. pg:3 zr:5 0 off:4  \
                &mova_p rs=%mova_rs esz=0 za=0
MOVA_tz         11000000 01 00000 0 v:1 .. pg:3 zr:5 0 za:1 off:3  \
                &mova_p rs=%mova_rs esz=1
MOVA_tz         11000000 10 00000 0 v:1 .. pg:3 zr:5 0 za:2 off:2  \
                &mova_p rs=%mova_rs esz=2
MOVA_tz         11000000 11 00000 0 v:1 .. pg:3 zr:5 0 za:3 off:1  \
                &mova_p rs=%mova_rs esz=3
MOVA_tz         11000000 11 00000 1 v:1 .. pg:3 zr:5 0 za:4  \
                &mova_p rs=%mova_rs esz=4 off=0

MOVA_zt         11000000 00 00001 0 v:1 .. pg:3 0 off:4      zr:5  \
                &mova_p rs=%mova_rs esz=0 za=0
MOVA_zt         11000000 01 00001 0 v:1 .. pg:3 0 za:1 off:3 zr:5  \
                &mova_p rs=%mova_rs esz=1
MOVA_zt         11000000 10 00001 0 v:1 .. pg:3 0 za:2 off:2 zr:5  \
                &mova_p rs=%mova_rs esz=2
MOVA_zt         11000000 11 00001 0 v:1 .. pg:3 0 za:3 off:1 zr:5  \
                &mova_p rs=%mova_rs esz=3
MOVA_zt         11000000 11 00001 1 v:1 .. pg:3 0 za:4       zr:5  \
                &mova_p rs=%mova_rs esz=4 off=0

MOVA_tz2        11000000 00 00010 0 v:1 .. 000  zr:4 0 00      off:3  \
                &mova_t rs=%mova_rs esz=0 za=0
MOVA_tz2        11000000 01 00010 0 v:1 .. 000  zr:4 0 00 za:1 off:2  \
                &mova_t rs=%mova_rs esz=1
MOVA_tz2        11000000 10 00010 0 v:1 .. 000  zr:4 0 00 za:2 off:1  \
                &mova_t rs=%mova_rs esz=2
MOVA_tz2        11000000 11 00010 0 v:1 .. 000  zr:4 0 00 za:3        \
                &mova_t rs=%mova_rs esz=3 off=0

MOVA_zt2        11000000 00 00011 0 v:1 .. 000 00      off:3 zr:4 0 \
                &mova_t rs=%mova_rs esz=0 za=0
MOVA_zt2        11000000 01 00011 0 v:1 .. 000 00 za:1 off:2 zr:4 0 \
                &mova_t rs=%mova_rs esz=1
MOVA_zt2        11000000 10 00011 0 v:1 .. 000 00 za:2 off:1 zr:4 0 \
                &mova_t rs=%mova_rs esz=2
MOVA_zt2        11000000 11 00011 0 v:1 .. 000 00 za:3       zr:4 0 \
                &mova_t rs=%mova_rs esz=3 off=0

MOVA_tz4        11000000 00 00010 0 v:1 .. 001 zr:3 00 000      off:2  \
                &mova_t rs=%mova_rs esz=0 za=0
MOVA_tz4        11000000 01 00010 0 v:1 .. 001 zr:3 00 000 za:1 off:1  \
                &mova_t rs=%mova_rs esz=1
MOVA_tz4        11000000 10 00010 0 v:1 .. 001 zr:3 00 000 za:2        \
                &mova_t rs=%mova_rs esz=2 off=0
MOVA_tz4        11000000 11 00010 0 v:1 .. 001 zr:3 00 00 za:3         \
                &mova_t rs=%mova_rs esz=3 off=0

MOVA_zt4        11000000 00 00011 0 v:1 .. 001 000      off:2 zr:3 00 \
                &mova_t rs=%mova_rs esz=0 za=0
MOVA_zt4        11000000 01 00011 0 v:1 .. 001 000 za:1 off:1 zr:3 00 \
                &mova_t rs=%mova_rs esz=1
MOVA_zt4        11000000 10 00011 0 v:1 .. 001 000 za:2       zr:3 00 \
                &mova_t rs=%mova_rs esz=2 off=0
MOVA_zt4        11000000 11 00011 0 v:1 .. 001 00 za:3        zr:3 00 \
                &mova_t rs=%mova_rs esz=3 off=0

MOVA_az2        11000000 00 00010 00 .. 010 zr:4  000 off:3  \
                &mova_a rv=%mova_rv
MOVA_az4        11000000 00 00010 00 .. 011 zr:3 0000 off:3  \
                &mova_a rv=%mova_rv

MOVA_za2        11000000 00 00011 00 .. 010 00 off:3 zr:4 0  \
                &mova_a rv=%mova_rv
MOVA_za4        11000000 00 00011 00 .. 011 00 off:3 zr:3 00 \
                &mova_a rv=%mova_rv

### SME Move into/from ZT0

MOVT_rzt        1100 0000 0100 1100 0 off:3 00 11111 rt:5
MOVT_ztr        1100 0000 0100 1110 0 off:3 00 11111 rt:5

### SME Memory

&ldst           esz rs pg rn rm za off v:bool st:bool

LDST1           1110000 0 00 st:1 rm:5 v:1 .. pg:3 rn:5 0 off:4  \
                &ldst rs=%mova_rs esz=0 za=0
LDST1           1110000 0 01 st:1 rm:5 v:1 .. pg:3 rn:5 0 za:1 off:3  \
                &ldst rs=%mova_rs esz=1
LDST1           1110000 0 10 st:1 rm:5 v:1 .. pg:3 rn:5 0 za:2 off:2  \
                &ldst rs=%mova_rs esz=2
LDST1           1110000 0 11 st:1 rm:5 v:1 .. pg:3 rn:5 0 za:3 off:1  \
                &ldst rs=%mova_rs esz=3
LDST1           1110000 1 11 st:1 rm:5 v:1 .. pg:3 rn:5 0 za:4  \
                &ldst rs=%mova_rs esz=4 off=0

&ldstr          rv rn imm
@ldstr          ....... ... . ...... .. ... rn:5 . imm:4 \
                &ldstr rv=%mova_rs

LDR             1110000 100 0 000000 .. 000 ..... 0 ....        @ldstr
STR             1110000 100 1 000000 .. 000 ..... 0 ....        @ldstr

&ldstzt0        rn
@ldstzt0        ....... ... . ...... .. ... rn:5  .....         &ldstzt0

LDR_zt0         1110000 100 0 111111 00 000 ..... 00000         @ldstzt0
STR_zt0         1110000 100 1 111111 00 000 ..... 00000         @ldstzt0

### SME Add Vector to Array

&adda           zad zn pm pn
@adda_32        ........ .. ..... . pm:3 pn:3 zn:5 ... zad:2    &adda
@adda_64        ........ .. ..... . pm:3 pn:3 zn:5 ..  zad:3    &adda

ADDHA_s         11000000 10 01000 0 ... ... ..... 000 ..        @adda_32
ADDVA_s         11000000 10 01000 1 ... ... ..... 000 ..        @adda_32
ADDHA_d         11000000 11 01000 0 ... ... ..... 00 ...        @adda_64
ADDVA_d         11000000 11 01000 1 ... ... ..... 00 ...        @adda_64

### SME Outer Product

&op             zad zn zm pm pn sub:bool
@op_32          ........ ... zm:5 pm:3 pn:3 zn:5 sub:1 .. zad:2 &op
@op_64          ........ ... zm:5 pm:3 pn:3 zn:5 sub:1 .  zad:3 &op

FMOPA_s         10000000 100 ..... ... ... ..... . 00 ..        @op_32
FMOPA_d         10000000 110 ..... ... ... ..... . 0 ...        @op_64

BFMOPA          10000001 100 ..... ... ... ..... . 00 ..        @op_32
FMOPA_h         10000001 101 ..... ... ... ..... . 00 ..        @op_32

SMOPA_s         1010000 0 10 0 ..... ... ... ..... . 00 ..      @op_32
SUMOPA_s        1010000 0 10 1 ..... ... ... ..... . 00 ..      @op_32
USMOPA_s        1010000 1 10 0 ..... ... ... ..... . 00 ..      @op_32
UMOPA_s         1010000 1 10 1 ..... ... ... ..... . 00 ..      @op_32

SMOPA_d         1010000 0 11 0 ..... ... ... ..... . 0 ...      @op_64
SUMOPA_d        1010000 0 11 1 ..... ... ... ..... . 0 ...      @op_64
USMOPA_d        1010000 1 11 0 ..... ... ... ..... . 0 ...      @op_64
UMOPA_d         1010000 1 11 1 ..... ... ... ..... . 0 ...      @op_64

BMOPA           1000000 0 10 0 ..... ... ... ..... . 10 ..      @op_32
SMOPA2_s        1010000 0 10 0 ..... ... ... ..... . 10 ..      @op_32
UMOPA2_s        1010000 1 10 0 ..... ... ... ..... . 10 ..      @op_32

### SME2 Multi-vector Multiple and Single SVE Destructive

%zd_ax2         1:4 !function=times_2
%zd_ax4         2:3 !function=times_4

&z2z_en         zdn zm esz n
@z2z_2x1        ....... . esz:2 .. zm:4 ....0. ..... .... . \
                &z2z_en n=2 zdn=%zd_ax2
@z2z_4x1        ....... . esz:2 .. zm:4 ....1. ..... ...0 . \
                &z2z_en n=4 zdn=%zd_ax4

SMAX_n1        1100000 1 .. 10 .... 1010.0 00000 .... 0    @z2z_2x1
SMAX_n1        1100000 1 .. 10 .... 1010.0 00000 .... 0    @z2z_4x1
UMAX_n1        1100000 1 .. 10 .... 1010.0 00000 .... 1    @z2z_2x1
UMAX_n1        1100000 1 .. 10 .... 1010.0 00000 .... 1    @z2z_4x1
SMIN_n1        1100000 1 .. 10 .... 1010.0 00001 .... 0    @z2z_2x1
SMIN_n1        1100000 1 .. 10 .... 1010.0 00001 .... 0    @z2z_4x1
UMIN_n1        1100000 1 .. 10 .... 1010.0 00001 .... 1    @z2z_2x1
UMIN_n1        1100000 1 .. 10 .... 1010.0 00001 .... 1    @z2z_4x1

FMAX_n1        1100000 1 .. 10 .... 1010.0 01000 .... 0    @z2z_2x1
FMAX_n1        1100000 1 .. 10 .... 1010.0 01000 .... 0    @z2z_4x1
FMIN_n1        1100000 1 .. 10 .... 1010.0 01000 .... 1    @z2z_2x1
FMIN_n1        1100000 1 .. 10 .... 1010.0 01000 .... 1    @z2z_4x1
FMAXNM_n1      1100000 1 .. 10 .... 1010.0 01001 .... 0    @z2z_2x1
FMAXNM_n1      1100000 1 .. 10 .... 1010.0 01001 .... 0    @z2z_4x1
FMINNM_n1      1100000 1 .. 10 .... 1010.0 01001 .... 1    @z2z_2x1
FMINNM_n1      1100000 1 .. 10 .... 1010.0 01001 .... 1    @z2z_4x1

SRSHL_n1       1100000 1 .. 10 .... 1010.0 10001 .... 0    @z2z_2x1
SRSHL_n1       1100000 1 .. 10 .... 1010.0 10001 .... 0    @z2z_4x1
URSHL_n1       1100000 1 .. 10 .... 1010.0 10001 .... 1    @z2z_2x1
URSHL_n1       1100000 1 .. 10 .... 1010.0 10001 .... 1    @z2z_4x1

ADD_n1         1100000 1 .. 10 .... 1010.0 11000 .... 0    @z2z_2x1
ADD_n1         1100000 1 .. 10 .... 1010.0 11000 .... 0    @z2z_4x1

SQDMULH_n1     1100000 1 .. 10 .... 1010.1 00000 .... 0    @z2z_2x1
SQDMULH_n1     1100000 1 .. 10 .... 1010.1 00000 .... 0    @z2z_4x1

### SME2 Multi-vector Multiple Vectors SVE Destructive

%zm_ax2         17:4 !function=times_2
%zm_ax4         18:3 !function=times_4

@z2z_2x2        ....... . esz:2 . ....0 ....0. ..... .... . \
                &z2z_en n=2 zdn=%zd_ax2 zm=%zm_ax2
@z2z_4x4        ....... . esz:2 . ...00 ....1. ..... ...0 . \
                &z2z_en n=4 zdn=%zd_ax4 zm=%zm_ax4

SMAX_nn        1100000 1 .. 1 ..... 1011.0 00000 .... 0    @z2z_2x2
SMAX_nn        1100000 1 .. 1 ..... 1011.0 00000 .... 0    @z2z_4x4
UMAX_nn        1100000 1 .. 1 ..... 1011.0 00000 .... 1    @z2z_2x2
UMAX_nn        1100000 1 .. 1 ..... 1011.0 00000 .... 1    @z2z_4x4
SMIN_nn        1100000 1 .. 1 ..... 1011.0 00001 .... 0    @z2z_2x2
SMIN_nn        1100000 1 .. 1 ..... 1011.0 00001 .... 0    @z2z_4x4
UMIN_nn        1100000 1 .. 1 ..... 1011.0 00001 .... 1    @z2z_2x2
UMIN_nn        1100000 1 .. 1 ..... 1011.0 00001 .... 1    @z2z_4x4

FMAX_nn        1100000 1 .. 1 ..... 1011.0 01000 .... 0    @z2z_2x2
FMAX_nn        1100000 1 .. 1 ..... 1011.0 01000 .... 0    @z2z_4x4
FMIN_nn        1100000 1 .. 1 ..... 1011.0 01000 .... 1    @z2z_2x2
FMIN_nn        1100000 1 .. 1 ..... 1011.0 01000 .... 1    @z2z_4x4
FMAXNM_nn      1100000 1 .. 1 ..... 1011.0 01001 .... 0    @z2z_2x2
FMAXNM_nn      1100000 1 .. 1 ..... 1011.0 01001 .... 0    @z2z_4x4
FMINNM_nn      1100000 1 .. 1 ..... 1011.0 01001 .... 1    @z2z_2x2
FMINNM_nn      1100000 1 .. 1 ..... 1011.0 01001 .... 1    @z2z_4x4

SRSHL_nn       1100000 1 .. 1 ..... 1011.0 10001 .... 0    @z2z_2x2
SRSHL_nn       1100000 1 .. 1 ..... 1011.0 10001 .... 0    @z2z_4x4
URSHL_nn       1100000 1 .. 1 ..... 1011.0 10001 .... 1    @z2z_2x2
URSHL_nn       1100000 1 .. 1 ..... 1011.0 10001 .... 1    @z2z_4x4

SQDMULH_nn     1100000 1 .. 1 ..... 1011.1 00000 .... 0    @z2z_2x2
SQDMULH_nn     1100000 1 .. 1 ..... 1011.1 00000 .... 0    @z2z_4x4

### SME2 Multi-vector Multiple and Single Array Vectors

&azz_n          n off rv zn zm
@azz_nx1_o3     ........ .... zm:4 ...... zn:5 .. off:3     &azz_n rv=%mova_rv

ADD_azz_n1_s    11000001 0010 .... 0 .. 110 ..... 10 ...    @azz_nx1_o3 n=2
ADD_azz_n1_s    11000001 0011 .... 0 .. 110 ..... 10 ...    @azz_nx1_o3 n=4
ADD_azz_n1_d    11000001 0110 .... 0 .. 110 ..... 10 ...    @azz_nx1_o3 n=2
ADD_azz_n1_d    11000001 0111 .... 0 .. 110 ..... 10 ...    @azz_nx1_o3 n=4

SUB_azz_n1_s    11000001 0010 .... 0 .. 110 ..... 11 ...    @azz_nx1_o3 n=2
SUB_azz_n1_s    11000001 0011 .... 0 .. 110 ..... 11 ...    @azz_nx1_o3 n=4
SUB_azz_n1_d    11000001 0110 .... 0 .. 110 ..... 11 ...    @azz_nx1_o3 n=2
SUB_azz_n1_d    11000001 0111 .... 0 .. 110 ..... 11 ...    @azz_nx1_o3 n=4
